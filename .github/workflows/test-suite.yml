name: test-suite

on:
  # schedule:
  #   - cron: '0 6 * * *' # Every day at 6:00 AM UTC.
  push:
    branches:
      - rippled-ci

jobs:
  install-rippled:
    runs-on: ubuntu-latest
    steps:
      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y upgrade
          sudo apt-get -y install git pkg-config protobuf-compiler libprotobuf-dev libssl-dev wget build-essential doxygen
          wget https://github.com/Kitware/CMake/releases/download/v3.16.3/cmake-3.16.3-Linux-x86_64.sh
          sudo sh cmake-3.16.3-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir
      - name: compile boost
        run: |
          wget https://boostorg.jfrog.io/artifactory/main/release/1.75.0/source/boost_1_75_0.tar.gz
          tar xvzf boost_1_75_0.tar.gz
          cd boost_1_75_0
          ./bootstrap.sh
          ./b2 -j $(nproc)
      - name: clone and build rippled
        env:
          BOOST_ROOT: /home/runner/work/xrpl/xrpl/boost_1_75_0
        run: |
          git clone https://github.com/XRPLF/rippled
          cd rippled
          git checkout master
          mkdir build
          cd build
          cmake ..
          cmake --build .
      - name: debug
        run: |
          pwd
          cd
          ls -Rla
      - uses: actions/upload-artifact@v3
        with:
          name: rippled-executable
          path: ./build/rippled

  # check:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: nightly
  #         override: true
  #     - uses: Swatinem/rust-cache@v2
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: test
  #         args: --all-targets --no-run
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: ziggurat-executable
  #         path: ./target/debug/deps/ziggurat-*

  # test-zcashd:
  #   runs-on: ubuntu-latest
  #   needs: [ check, install-zcashd ]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: zcashd-fetch-params
  #         path: ./zcash
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: zcashd-executable
  #         path: ./zcash
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: ziggurat-executable
  #         path: ./ziggurat
  #     - name: Create ~/.ziggurat/config.toml
  #       run: |
  #         mkdir ~/.ziggurat/
  #         touch ~/.ziggurat/config.toml
  #         echo kind = \"zcashd\" > ~/.ziggurat/config.toml
  #         echo path = \"/home/runner/work/zcash/zcash/zcash\" >> ~/.ziggurat/config.toml
  #         echo start_command = \"./zcashd -debug=1 -printtoconsole -logips=1 -dnsseed=0 -dns=0 -listenonion=0\" >> ~/.ziggurat/config.toml
  #     - name: Fetch zcashd params
  #       run: |
  #         chmod +x zcash/fetch-params.sh
  #         ./zcash/fetch-params.sh
  #     - name: Run ziggurat suite
  #       continue-on-error: true
  #       run: |
  #         rm ./ziggurat/*.d
  #         mv ./ziggurat/ziggurat-* ziggurat_test
  #         chmod +x ziggurat_test
  #         chmod +x zcash/zcashd
  #         mkdir -p results/zcashd
  #         ./ziggurat_test --test-threads=1 --nocapture -Z unstable-options --report-time --format json > result.jsonl
  #     - name: git
  #       run: |
  #         FILENAME=$(date +%Y-%m-%d)
  #         mv result.jsonl results/zcashd/$FILENAME.jsonl
  #         rm -f results/zcashd/latest.jsonl
  #         cp results/zcashd/$FILENAME.jsonl results/zcashd/latest.jsonl
  #         git config user.name "GitHub Actions Bot"
  #         git config user.email "<>"
  #         git pull
  #         git add results
  #         git commit -m "ci: zcashd suite results"
  #         git push
